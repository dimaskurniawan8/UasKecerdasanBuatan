hasil
dataku=read.delim("clipboard")
dataku=read.delim("clipboard")
library("randomForest")
library("randomForest")
library("caret")
#---
sampel=sample(1:nrow(dataku),0.75*nrow(dataku),replace=TRUE)
training=data.frame(dataku)[sampel,]
testing=data.frame(dataku)[-sampel,]
#---
str(dataku)
View(dataku)
modelRF=randomForest(as.factor(Keputusan)~.,data=training)
prediksi=predict(modelRF,testing)
hasil=confusionMatrix(table(prediksi,testing$Keputusan))
hasil
dataku=read.delim("clipboard")
install.packages("randomForest")
install.packages("randomForest")
install.packages("caret",  dep=TRUE)
install.packages('e1071', dependencies=TRUE)
library("randomForest")
library("caret")
library("randomForest")
library("caret")
#---
sampel=sample(1:nrow(dataku),0.75*nrow(dataku),replace=TRUE)
training=data.frame(dataku)[sampel,]
testing=data.frame(dataku)[-sampel,]
#---
str(dataku)
dataku=read.delim("clipboard")
install.packages("randomForest")
install.packages("randomForest")
install.packages("caret",  dep=TRUE)
install.packages('e1071', dependencies=TRUE)
library("randomForest")
library("randomForest")
library("caret")
#---
sampel=sample(1:nrow(dataku),0.75*nrow(dataku),replace=TRUE)
library("caret")
#---
sampel=sample(1:nrow(dataku),0.75*nrow(dataku),replace=TRUE)
training=data.frame(dataku)[sampel,]
testing=data.frame(dataku)[-sampel,]
#---
str(dataku)
modelRF=randomForest(as.factor(Keputusan)~.,data=training)
prediksi=predict(modelRF,testing)
hasil=confusionMatrix(table(prediksi,testing$Keputusan))
hasil
